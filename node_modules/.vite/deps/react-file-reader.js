import {
  require_prop_types
} from "./chunk-O6GWARG4.js";
import {
  require_react
} from "./chunk-ABDRZE5M.js";
import {
  __commonJS
} from "./chunk-LFBQMW2U.js";

// node_modules/uuid4/browser.js
var require_browser = __commonJS({
  "node_modules/uuid4/browser.js"(exports, module) {
    (function() {
      function getBytes() {
        try {
          return Array.from(
            (window.crypto || window.msCrypto).getRandomValues(new Uint8Array(16))
          );
        } catch (error) {
          var ret = [];
          while (ret.length < 16)
            ret.push(Math.random() * 256 & 255);
          return ret;
        }
      }
      function m(v) {
        v = v.toString(16);
        if (v.length < 2)
          v = "0" + v;
        return v;
      }
      function genUUID() {
        var rnd = getBytes();
        rnd[6] = rnd[6] & 15 | 64;
        rnd[8] = rnd[8] & 63 | 128;
        rnd = rnd.map(m).join("").match(/(.{8})(.{4})(.{4})(.{4})(.{12})/);
        rnd.shift();
        return rnd.join("-");
      }
      var uuidPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;
      function isUUID(uuid) {
        return uuidPattern.test(uuid);
      }
      genUUID.valid = isUUID;
      if (window) {
        window.uuid4 = genUUID;
      }
      if (typeof module !== "undefined" && module.exports) {
        module.exports = genUUID;
      }
      if (typeof define === "function" && define.amd) {
        define([], function() {
          return genUUID;
        });
      }
    })();
  }
});

// node_modules/react-file-reader/index.js
var require_react_file_reader = __commonJS({
  "node_modules/react-file-reader/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    var _react = require_react();
    var _react2 = _interopRequireDefault(_react);
    var _uuid = require_browser();
    var _uuid2 = _interopRequireDefault(_uuid);
    var _propTypes = require_prop_types();
    var _propTypes2 = _interopRequireDefault(_propTypes);
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return call && (typeof call === "object" || typeof call === "function") ? call : self;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    var ReactFileReader = function(_React$Component) {
      _inherits(ReactFileReader2, _React$Component);
      function ReactFileReader2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, ReactFileReader2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ReactFileReader2.__proto__ || Object.getPrototypeOf(ReactFileReader2)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
          elementId: _this.props.elementId || (0, _uuid2.default)()
        }, _this.clickInput = function() {
          var element = document.getElementById(_this.state.elementId);
          element.value = "";
          element.click();
        }, _this.handleFiles = function(event) {
          if (_this.props.base64) {
            _this.convertFilesToBase64(event.target.files);
          } else {
            _this.props.handleFiles(event.target.files);
          }
        }, _this.convertFilesToBase64 = function(files) {
          var ef = files;
          if (_this.props.multipleFiles) {
            var i, len;
            (function() {
              var files2 = { base64: [], fileList: ef };
              var _loop = function _loop2() {
                var reader = new FileReader();
                var f2 = ef[i];
                reader.onloadend = function(e) {
                  files2.base64.push(reader.result);
                  if (files2.base64.length === ef.length) {
                    _this.props.handleFiles(files2);
                  }
                };
                reader.readAsDataURL(f2);
              };
              for (i = 0, len = ef.length; i < len; i++) {
                _loop();
              }
            })();
          } else {
            var _files = { base64: "", fileList: ef };
            var f = ef[0];
            var _reader = new FileReader();
            _reader.onloadend = function(e) {
              _files.base64 = _reader.result;
              _this.props.handleFiles(_files);
            };
            _reader.readAsDataURL(f);
          }
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(ReactFileReader2, [{
        key: "render",
        value: function render() {
          var hideInput = {
            width: "0px",
            opacity: "0",
            position: "fixed"
          };
          return _react2.default.createElement(
            "div",
            { className: "react-file-reader" },
            _react2.default.createElement("input", {
              type: "file",
              onChange: this.handleFiles,
              accept: Array.isArray(this.props.fileTypes) ? this.props.fileTypes.join(",") : this.props.fileTypes,
              className: "react-file-reader-input",
              id: this.state.elementId,
              multiple: this.props.multipleFiles,
              style: hideInput,
              disabled: this.props.disabled
            }),
            _react2.default.createElement(
              "div",
              { className: "react-file-reader-button", onClick: this.clickInput },
              this.props.children
            )
          );
        }
      }]);
      return ReactFileReader2;
    }(_react2.default.Component);
    exports.default = ReactFileReader;
    ReactFileReader.defaultProps = {
      fileTypes: "image/*",
      multipleFiles: false,
      base64: false,
      disabled: false
    };
    ReactFileReader.propTypes = {
      multipleFiles: _propTypes2.default.bool,
      handleFiles: _propTypes2.default.func.isRequired,
      fileTypes: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),
      base64: _propTypes2.default.bool,
      children: _propTypes2.default.element.isRequired,
      disabled: _propTypes2.default.bool
    };
  }
});
export default require_react_file_reader();
//# sourceMappingURL=react-file-reader.js.map
