{"version":3,"file":"react-toggle-dark-mode.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nexport const defaultProperties = {\n  dark: {\n    circle: {\n      r: 9,\n    },\n    mask: {\n      cx: '50%',\n      cy: '23%',\n    },\n    svg: {\n      transform: 'rotate(40deg)',\n    },\n    lines: {\n      opacity: 0,\n    },\n  },\n  light: {\n    circle: {\n      r: 5,\n    },\n    mask: {\n      cx: '100%',\n      cy: '0%',\n    },\n    svg: {\n      transform: 'rotate(90deg)',\n    },\n    lines: {\n      opacity: 1,\n    },\n  },\n  springConfig: { mass: 4, tension: 250, friction: 35 },\n};\n\nlet REACT_TOGGLE_DARK_MODE_GLOBAL_ID = 0;\n\ntype SVGProps = Omit<React.HTMLAttributes<HTMLOrSVGElement>, 'onChange'>;\nexport interface Props extends SVGProps {\n  onChange: (checked: boolean) => void;\n  checked: boolean;\n  style?: React.CSSProperties;\n  size?: number | string;\n  animationProperties?: typeof defaultProperties;\n  moonColor?: string;\n  sunColor?: string;\n}\n\nexport const DarkModeSwitch: React.FC<Props> = ({\n  onChange,\n  children,\n  checked = false,\n  size = 24,\n  animationProperties = defaultProperties,\n  moonColor = 'white',\n  sunColor = 'black',\n  style,\n  ...rest\n}) => {\n  const [id, setId] = React.useState(0);\n\n  React.useEffect(() => {\n    REACT_TOGGLE_DARK_MODE_GLOBAL_ID += 1;\n    setId(REACT_TOGGLE_DARK_MODE_GLOBAL_ID);\n  }, [setId]);\n\n  const properties = React.useMemo(() => {\n    if (animationProperties !== defaultProperties) {\n      return Object.assign(defaultProperties, animationProperties);\n    }\n\n    return animationProperties;\n  }, [animationProperties]);\n\n  const { circle, svg, lines, mask } = properties[checked ? 'dark' : 'light'];\n\n  const svgContainerProps = useSpring({\n    ...svg,\n    config: animationProperties.springConfig,\n  });\n  const centerCircleProps = useSpring({\n    ...circle,\n    config: animationProperties.springConfig,\n  });\n  const maskedCircleProps = useSpring({\n    ...mask,\n    config: animationProperties.springConfig,\n  });\n  const linesProps = useSpring({\n    ...lines,\n    config: animationProperties.springConfig,\n  });\n\n  const toggle = () => onChange(!checked);\n\n  const uniqueMaskId = `circle-mask-${id}`;\n\n  return (\n    <animated.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      color={checked ? moonColor : sunColor}\n      fill=\"none\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      stroke=\"currentColor\"\n      onClick={toggle}\n      style={{\n        cursor: 'pointer',\n        ...svgContainerProps,\n        ...style,\n      }}\n      {...rest}\n    >\n      <mask id={uniqueMaskId}>\n        <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\" />\n        <animated.circle\n          // @ts-ignore\n          style={maskedCircleProps}\n          r=\"9\"\n          fill=\"black\"\n        />\n      </mask>\n\n      <animated.circle\n        cx=\"12\"\n        cy=\"12\"\n        fill={checked ? moonColor : sunColor}\n        // @ts-ignore\n        style={centerCircleProps}\n        mask={`url(#${uniqueMaskId})`}\n      />\n      <animated.g stroke=\"currentColor\" style={linesProps}>\n        <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\n        <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\n        <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\n        <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\n        <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\n        <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\n        <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\n        <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\n      </animated.g>\n    </animated.svg>\n  );\n};\n"],"names":["defaultProperties","dark","circle","r","mask","cx","cy","svg","transform","lines","opacity","light","springConfig","mass","tension","friction","REACT_TOGGLE_DARK_MODE_GLOBAL_ID","onChange","checked","size","animationProperties","moonColor","sunColor","style","rest","React","id","setId","Object","assign","svgContainerProps","useSpring","config","centerCircleProps","maskedCircleProps","linesProps","uniqueMaskId","animated","xmlns","width","height","viewBox","color","fill","strokeWidth","strokeLinecap","strokeLinejoin","stroke","onClick","cursor","x","y","g","x1","y1","x2","y2"],"mappings":"wUAGaA,EAAoB,CAC/BC,KAAM,CACJC,OAAQ,CACNC,EAAG,GAELC,KAAM,CACJC,GAAI,MACJC,GAAI,OAENC,IAAK,CACHC,UAAW,iBAEbC,MAAO,CACLC,QAAS,IAGbC,MAAO,CACLT,OAAQ,CACNC,EAAG,GAELC,KAAM,CACJC,GAAI,OACJC,GAAI,MAENC,IAAK,CACHC,UAAW,iBAEbC,MAAO,CACLC,QAAS,IAGbE,aAAc,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,KAG/CC,EAAmC,yBAaQ,gBAC7CC,IAAAA,aAEAC,QAAAA,oBACAC,KAAAA,aAAO,SACPC,oBAAAA,aAAsBpB,QACtBqB,UAAAA,aAAY,cACZC,SAAAA,aAAW,UACXC,IAAAA,MACGC,wOAEiBC,WAAe,GAA5BC,OAAIC,OAEXF,aAAgB,WAEdE,EADAX,GAAoC,KAEnC,CAACW,UAEeF,WAAc,kBAC3BL,IAAwBpB,EACnB4B,OAAOC,OAAO7B,EAAmBoB,GAGnCA,IACN,CAACA,IAE4CF,EAAU,OAAS,SAA3DhB,IAAAA,OAAaO,IAAAA,MAAOL,IAAAA,KAEtB0B,EAAoBC,mBAFVxB,KAIdyB,OAAQZ,EAAoBR,gBAExBqB,EAAoBF,iBACrB7B,GACH8B,OAAQZ,EAAoBR,gBAExBsB,EAAoBH,iBACrB3B,GACH4B,OAAQZ,EAAoBR,gBAExBuB,EAAaJ,iBACdtB,GACHuB,OAAQZ,EAAoBR,gBAKxBwB,iBAA8BV,SAGlCD,gBAACY,WAAS9B,mBACR+B,MAAM,6BACNC,MAAOpB,EACPqB,OAAQrB,EACRsB,QAAQ,YACRC,MAAOxB,EAAUG,EAAYC,EAC7BqB,KAAK,OACLC,YAAY,IACZC,cAAc,QACdC,eAAe,QACfC,OAAO,eACPC,QAhBW,kBAAM/B,GAAUC,IAiB3BK,SACE0B,OAAQ,WACLnB,EACAP,IAEDC,GAEJC,wBAAMC,GAAIU,GACRX,wBAAMyB,EAAE,IAAIC,EAAE,IAAIZ,MAAM,OAAOC,OAAO,OAAOG,KAAK,UAClDlB,gBAACY,WAASnC,QAERqB,MAAOW,EACP/B,EAAE,IACFwC,KAAK,WAITlB,gBAACY,WAASnC,QACRG,GAAG,KACHC,GAAG,KACHqC,KAAMzB,EAAUG,EAAYC,EAE5BC,MAAOU,EACP7B,aAAcgC,QAEhBX,gBAACY,WAASe,GAAEL,OAAO,eAAexB,MAAOY,GACvCV,wBAAM4B,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,MAChC/B,wBAAM4B,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC/B,wBAAM4B,GAAG,OAAOC,GAAG,OAAOC,GAAG,OAAOC,GAAG,SACvC/B,wBAAM4B,GAAG,QAAQC,GAAG,QAAQC,GAAG,QAAQC,GAAG,UAC1C/B,wBAAM4B,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,OAC/B/B,wBAAM4B,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OACjC/B,wBAAM4B,GAAG,OAAOC,GAAG,QAAQC,GAAG,OAAOC,GAAG,UACxC/B,wBAAM4B,GAAG,QAAQC,GAAG,OAAOC,GAAG,QAAQC,GAAG"}