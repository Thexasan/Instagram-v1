{"version":3,"file":"react-toggle-dark-mode.cjs.development.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useSpring, animated } from 'react-spring';\n\nexport const defaultProperties = {\n  dark: {\n    circle: {\n      r: 9,\n    },\n    mask: {\n      cx: '50%',\n      cy: '23%',\n    },\n    svg: {\n      transform: 'rotate(40deg)',\n    },\n    lines: {\n      opacity: 0,\n    },\n  },\n  light: {\n    circle: {\n      r: 5,\n    },\n    mask: {\n      cx: '100%',\n      cy: '0%',\n    },\n    svg: {\n      transform: 'rotate(90deg)',\n    },\n    lines: {\n      opacity: 1,\n    },\n  },\n  springConfig: { mass: 4, tension: 250, friction: 35 },\n};\n\nlet REACT_TOGGLE_DARK_MODE_GLOBAL_ID = 0;\n\ntype SVGProps = Omit<React.HTMLAttributes<HTMLOrSVGElement>, 'onChange'>;\nexport interface Props extends SVGProps {\n  onChange: (checked: boolean) => void;\n  checked: boolean;\n  style?: React.CSSProperties;\n  size?: number | string;\n  animationProperties?: typeof defaultProperties;\n  moonColor?: string;\n  sunColor?: string;\n}\n\nexport const DarkModeSwitch: React.FC<Props> = ({\n  onChange,\n  children,\n  checked = false,\n  size = 24,\n  animationProperties = defaultProperties,\n  moonColor = 'white',\n  sunColor = 'black',\n  style,\n  ...rest\n}) => {\n  const [id, setId] = React.useState(0);\n\n  React.useEffect(() => {\n    REACT_TOGGLE_DARK_MODE_GLOBAL_ID += 1;\n    setId(REACT_TOGGLE_DARK_MODE_GLOBAL_ID);\n  }, [setId]);\n\n  const properties = React.useMemo(() => {\n    if (animationProperties !== defaultProperties) {\n      return Object.assign(defaultProperties, animationProperties);\n    }\n\n    return animationProperties;\n  }, [animationProperties]);\n\n  const { circle, svg, lines, mask } = properties[checked ? 'dark' : 'light'];\n\n  const svgContainerProps = useSpring({\n    ...svg,\n    config: animationProperties.springConfig,\n  });\n  const centerCircleProps = useSpring({\n    ...circle,\n    config: animationProperties.springConfig,\n  });\n  const maskedCircleProps = useSpring({\n    ...mask,\n    config: animationProperties.springConfig,\n  });\n  const linesProps = useSpring({\n    ...lines,\n    config: animationProperties.springConfig,\n  });\n\n  const toggle = () => onChange(!checked);\n\n  const uniqueMaskId = `circle-mask-${id}`;\n\n  return (\n    <animated.svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      viewBox=\"0 0 24 24\"\n      color={checked ? moonColor : sunColor}\n      fill=\"none\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      stroke=\"currentColor\"\n      onClick={toggle}\n      style={{\n        cursor: 'pointer',\n        ...svgContainerProps,\n        ...style,\n      }}\n      {...rest}\n    >\n      <mask id={uniqueMaskId}>\n        <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\" />\n        <animated.circle\n          // @ts-ignore\n          style={maskedCircleProps}\n          r=\"9\"\n          fill=\"black\"\n        />\n      </mask>\n\n      <animated.circle\n        cx=\"12\"\n        cy=\"12\"\n        fill={checked ? moonColor : sunColor}\n        // @ts-ignore\n        style={centerCircleProps}\n        mask={`url(#${uniqueMaskId})`}\n      />\n      <animated.g stroke=\"currentColor\" style={linesProps}>\n        <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\n        <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\n        <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\n        <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\n        <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\n        <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\n        <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\n        <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\n      </animated.g>\n    </animated.svg>\n  );\n};\n"],"names":["defaultProperties","dark","circle","r","mask","cx","cy","svg","transform","lines","opacity","light","springConfig","mass","tension","friction","REACT_TOGGLE_DARK_MODE_GLOBAL_ID","DarkModeSwitch","onChange","checked","size","animationProperties","moonColor","sunColor","style","rest","React","id","setId","properties","Object","assign","svgContainerProps","useSpring","config","centerCircleProps","maskedCircleProps","linesProps","toggle","uniqueMaskId","animated","xmlns","width","height","viewBox","color","fill","strokeWidth","strokeLinecap","strokeLinejoin","stroke","onClick","cursor","x","y","g","x1","y1","x2","y2"],"mappings":"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"}